CREATE TABLE Course (CourseID int(10) NOT NULL, `Group` int(10) NOT NULL, PersonID int(11) NOT NULL, PersonPersonalID int(10) NOT NULL, PersonStudentID int(10) NOT NULL, Name varchar(255) NOT NULL, Syllabus text, Schedule text, PRIMARY KEY (CourseID, `Group`)) CHARACTER SET UTF8;
CREATE TABLE TestTemplate (TestID int(10) NOT NULL AUTO_INCREMENT, Duration int(10) NOT NULL, `Date` date NOT NULL, CourseCourseID int(10) NOT NULL, CourseGroup int(10), PRIMARY KEY (TestID)) CHARACTER SET UTF8;
CREATE TABLE Test (ID int(11) NOT NULL AUTO_INCREMENT, PersonID3 int(11) NOT NULL, PersonPersonalID3 int(10) NOT NULL, PersonStudentID3 int(10) NOT NULL, Result int(10), Grade fixed(1, 0), TestTemplateTestID int(10) NOT NULL, AnswerID int(11) NOT NULL, PersonID int(11) NOT NULL, PersonPersonalID int(10) NOT NULL, PersonStudentID int(10) NOT NULL, TestID int(11) NOT NULL, PRIMARY KEY (ID)) CHARACTER SET UTF8;
CREATE TABLE Answer (ID int(11) NOT NULL AUTO_INCREMENT, QuestionID2 int(11) NOT NULL, Answer text, Points int(10), TestID int(11) NOT NULL, PRIMARY KEY (ID)) CHARACTER SET UTF8;
CREATE TABLE `Evaluation Rule` (ID int(11) NOT NULL AUTO_INCREMENT, EvaluationRule varchar(255), AnswerID int(11) NOT NULL, PRIMARY KEY (ID)) CHARACTER SET UTF8;
CREATE TABLE Question (ID int(11) NOT NULL AUTO_INCREMENT, TestTemplateTestID int(10) NOT NULL, `Max points` int(10), Text text, `Solution:String[0..4]` int(10), Answers text, Solution varchar(255), Discriminator varchar(255) NOT NULL, PRIMARY KEY (ID)) CHARACTER SET UTF8;
CREATE TABLE Person (ID int(11) NOT NULL, PersonalID int(10) NOT NULL, StudentID int(10) NOT NULL, Name varchar(255) NOT NULL, Surname varchar(255) NOT NULL, Discriminator varchar(255) NOT NULL, Pwd varchar(20) NOT NULL, PRIMARY KEY (ID, PersonalID, StudentID)) CHARACTER SET UTF8;
CREATE TABLE Person_Course (PersonID int(11) NOT NULL, PersonPersonalID int(10) NOT NULL, PersonStudentID int(10) NOT NULL, CourseCourseID int(10) NOT NULL, CourseGroup int(10) NOT NULL, PRIMARY KEY (PersonID, PersonPersonalID, PersonStudentID, CourseCourseID, CourseGroup)) CHARACTER SET UTF8;
ALTER TABLE Test ADD INDEX `is a >` (TestTemplateTestID), ADD CONSTRAINT `is a >` FOREIGN KEY (TestTemplateTestID) REFERENCES TestTemplate (TestID);
ALTER TABLE TestTemplate ADD INDEX FKTestTempla252490 (CourseCourseID, CourseGroup), ADD CONSTRAINT FKTestTempla252490 FOREIGN KEY (CourseCourseID, CourseGroup) REFERENCES Course (CourseID, `Group`);
ALTER TABLE Answer ADD INDEX FKAnswer328167 (TestID), ADD CONSTRAINT FKAnswer328167 FOREIGN KEY (TestID) REFERENCES Test (ID);
ALTER TABLE Person_Course ADD INDEX `is in >` (PersonID, PersonPersonalID, PersonStudentID), ADD CONSTRAINT `is in >` FOREIGN KEY (PersonID, PersonPersonalID, PersonStudentID) REFERENCES Person (ID, PersonalID, StudentID);
ALTER TABLE Person_Course ADD INDEX `is in >2` (CourseCourseID, CourseGroup), ADD CONSTRAINT `is in >2` FOREIGN KEY (CourseCourseID, CourseGroup) REFERENCES Course (CourseID, `Group`);
ALTER TABLE Question ADD INDEX FKQuestion772427 (TestTemplateTestID), ADD CONSTRAINT FKQuestion772427 FOREIGN KEY (TestTemplateTestID) REFERENCES TestTemplate (TestID);
ALTER TABLE Course ADD INDEX `runs >` (PersonID, PersonPersonalID, PersonStudentID), ADD CONSTRAINT `runs >` FOREIGN KEY (PersonID, PersonPersonalID, PersonStudentID) REFERENCES Person (ID, PersonalID, StudentID);
ALTER TABLE Test ADD INDEX `can access>` (PersonID3, PersonPersonalID3, PersonStudentID3), ADD CONSTRAINT `can access>` FOREIGN KEY (PersonID3, PersonPersonalID3, PersonStudentID3) REFERENCES Person (ID, PersonalID, StudentID);
ALTER TABLE `Evaluation Rule` ADD INDEX FKEvaluation639428 (AnswerID), ADD CONSTRAINT FKEvaluation639428 FOREIGN KEY (AnswerID) REFERENCES Answer (ID);
ALTER TABLE Answer ADD INDEX `for>` (QuestionID2), ADD CONSTRAINT `for>` FOREIGN KEY (QuestionID2) REFERENCES Question (ID);
